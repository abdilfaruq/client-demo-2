{"ast":null,"code":"import React, { useState, useCallback, useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar styles = {\n  \"container\": \"_1Lxpd\",\n  \"cardCarousel\": \"_3tZKZ\",\n  \"carouselDefault\": \"_215Bn\",\n  \"leftButton\": \"_2ocTZ\",\n  \"rightButton\": \"_2YVEG\",\n  \"card\": \"_xsi02\",\n  \"active\": \"_3sodH\",\n  \"next\": \"_1uQwZ\",\n  \"prev\": \"_KqFRp\",\n  \"inactive\": \"_3hvs3\"\n};\nvar defaultCardItems = [/*#__PURE__*/React.createElement(\"div\", {\n  key: \"key1\"\n}, /*#__PURE__*/React.createElement(\"h2\", null, \"First Item\"), /*#__PURE__*/React.createElement(\"p\", null, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\")), /*#__PURE__*/React.createElement(\"div\", {\n  key: \"key2\"\n}, /*#__PURE__*/React.createElement(\"h2\", null, \"Second Item\"), /*#__PURE__*/React.createElement(\"p\", null, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\")), /*#__PURE__*/React.createElement(\"div\", {\n  key: \"key3\"\n}, /*#__PURE__*/React.createElement(\"h2\", null, \"Third Item\"), /*#__PURE__*/React.createElement(\"p\", null, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"))];\n\nvar setCardStatus = function setCardStatus(indexes, cardIndex) {\n  if (indexes.currentIndex === cardIndex) {\n    return styles.active;\n  } else if (indexes.nextIndex === cardIndex) {\n    return styles.next;\n  } else if (indexes.previousIndex === cardIndex) {\n    return styles.prev;\n  }\n\n  return styles.inactive;\n};\n\nvar StackedCarousel = function StackedCarousel(_ref) {\n  var style = _ref.style,\n      onCardChange = _ref.onCardChange,\n      containerClassName = _ref.containerClassName,\n      cardClassName = _ref.cardClassName,\n      leftButton = _ref.leftButton,\n      rightButton = _ref.rightButton,\n      _ref$autoRotate = _ref.autoRotate,\n      autoRotate = _ref$autoRotate === void 0 ? true : _ref$autoRotate,\n      _ref$rotationInterval = _ref.rotationInterval,\n      rotationInterval = _ref$rotationInterval === void 0 ? 2000 : _ref$rotationInterval,\n      children = _ref.children;\n  var cardItems = children || defaultCardItems;\n\n  var _useState = useState({\n    previousIndex: cardItems.length - 1,\n    currentIndex: 0,\n    nextIndex: 1\n  }),\n      indexes = _useState[0],\n      setIndexes = _useState[1];\n\n  var handleCardTransition = useCallback(function () {\n    if (indexes.currentIndex >= cardItems.length - 1) {\n      setIndexes({\n        previousIndex: cardItems.length - 1,\n        currentIndex: 0,\n        nextIndex: 1\n      });\n    } else {\n      setIndexes(function (prevState) {\n        return {\n          previousIndex: prevState.currentIndex,\n          currentIndex: prevState.currentIndex + 1,\n          nextIndex: prevState.currentIndex + 2 === cardItems.length ? 0 : prevState.currentIndex + 2\n        };\n      });\n    }\n  }, [indexes.currentIndex]);\n  var handleLeftButton = useCallback(function () {\n    if (indexes.currentIndex <= 0) {\n      setIndexes({\n        previousIndex: cardItems.length - 2,\n        currentIndex: cardItems.length - 1,\n        nextIndex: 0\n      });\n    } else {\n      setIndexes(function (prevState) {\n        return {\n          nextIndex: prevState.currentIndex,\n          currentIndex: prevState.currentIndex - 1,\n          previousIndex: prevState.currentIndex - 1 <= 0 ? cardItems.length - 1 : prevState.currentIndex - 2\n        };\n      });\n    }\n  }, [indexes.currentIndex]);\n  useEffect(function () {\n    onCardChange && onCardChange(indexes);\n    var transitionInterval = setInterval(function () {\n      autoRotate && handleCardTransition();\n    }, rotationInterval);\n    return function () {\n      return clearInterval(transitionInterval);\n    };\n  }, [handleCardTransition, indexes, autoRotate]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\" + styles.container\n  }, leftButton ? /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleLeftButton\n  }, leftButton) : /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.leftButton,\n    onClick: handleLeftButton\n  }, \"\\u2039\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: _extends({}, style),\n    className: styles.cardCarousel + \" \" + (containerClassName ? containerClassName : styles.carouselDefault)\n  }, cardItems.map(function (card, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: card.key,\n      className: (cardClassName ? cardClassName : '') + \" \" + styles.card + \" \" + setCardStatus(indexes, index)\n    }, card);\n  })), rightButton ? /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleCardTransition\n  }, rightButton) : /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.rightButton,\n    onClick: handleCardTransition\n  }, \"\\u203A\"));\n};\n\nexport { StackedCarousel };","map":{"version":3,"sources":["../src/index.js"],"names":["defaultCardItems","setCardStatus","indexes","styles","StackedCarousel","style","onCardChange","containerClassName","cardClassName","leftButton","rightButton","autoRotate","rotationInterval","children","cardItems","setIndexes","useState","previousIndex","currentIndex","nextIndex","handleCardTransition","useCallback","prevState","handleLeftButton","useEffect","transitionInterval","setInterval","clearInterval","container","card"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,gBAAgB,GAAG,CAAA,aAErB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,EAAA,GAAG,EAAC;AAAT,CAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EADF,YACE,CADF,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAJmB,0DAInB,CAFF,CAFqB,EAAA,aAQrB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,EAAA,GAAG,EAAC;AAAT,CAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EADF,aACE,CADF,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAVmB,0DAUnB,CAFF,CARqB,EAAA,aAcrB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,EAAA,GAAG,EAAC;AAAT,CAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EADF,YACE,CADF,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAhBN,0DAgBM,CAFF,CAdqB,CAAzB;;AAsBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,OAAA,EAAA,SAAA,EAAwB;AAE5C,MAAIC,OAAO,CAAPA,YAAAA,KAAJ,SAAA,EAAwC;AACtC,WAAQC,MAAM,CAAd,MAAA;AADF,GAAA,MAEO,IAAID,OAAO,CAAPA,SAAAA,KAAJ,SAAA,EAAqC;AAC1C,WAAOC,MAAM,CAAb,IAAA;AADK,GAAA,MAEA,IAAID,OAAO,CAAPA,aAAAA,KAAJ,SAAA,EAAyC;AAC9C,WAAOC,MAAM,CAAb,IAAA;AACD;;AACD,SAAOA,MAAM,CAAb,QAAA;AATF,CAAA;;AAYA,IAAaC,eAAe,GAAG,SAAlBA,eAAkB,CAAA,IAAA,EAA0I;AAAA,MAAvIC,KAAuI,GAAA,IAAA,CAAvIA,KAAuI;AAAA,MAAhIC,YAAgI,GAAA,IAAA,CAAhIA,YAAgI;AAAA,MAAlHC,kBAAkH,GAAA,IAAA,CAAlHA,kBAAkH;AAAA,MAA9FC,aAA8F,GAAA,IAAA,CAA9FA,aAA8F;AAAA,MAA/EC,UAA+E,GAAA,IAAA,CAA/EA,UAA+E;AAAA,MAAnEC,WAAmE,GAAA,IAAA,CAAnEA,WAAmE;AAAA,MAAA,eAAA,GAAA,IAAA,CAAtDC,UAAsD;AAAA,MAAtDA,UAAsD,GAAA,eAAA,KAAA,KAAA,CAAA,GAA3C,IAA2C,GAAA,eAAA;AAAA,MAAA,qBAAA,GAAA,IAAA,CAArCC,gBAAqC;AAAA,MAArCA,gBAAqC,GAAA,qBAAA,KAAA,KAAA,CAAA,GAApB,IAAoB,GAAA,qBAAA;AAAA,MAAdC,QAAc,GAAA,IAAA,CAAdA,QAAc;AACvK,MAAMC,SAAS,GAAGD,QAAQ,IAA1B,gBAAA;;AADuK,MAAA,SAAA,GAEzIG,QAAQ,CAAC;AACrCC,IAAAA,aAAa,EAAEH,SAAS,CAATA,MAAAA,GADsB,CAAA;AAErCI,IAAAA,YAAY,EAFyB,CAAA;AAGrCC,IAAAA,SAAS,EAAE;AAH0B,GAAD,CAFiI;AAAA,MAEhKjB,OAFgK,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MAEvJa,UAFuJ,GAAA,SAAA,CAAA,CAAA,CAAA;;AAQvK,MAAMK,oBAAoB,GAAGC,WAAW,CAAC,YAAM;AAG7C,QAAInB,OAAO,CAAPA,YAAAA,IAAwBY,SAAS,CAATA,MAAAA,GAA5B,CAAA,EAAkD;AAChDC,MAAAA,UAAU,CAAC;AACTE,QAAAA,aAAa,EAAEH,SAAS,CAATA,MAAAA,GADN,CAAA;AAETI,QAAAA,YAAY,EAFH,CAAA;AAGTC,QAAAA,SAAS,EAAE;AAHF,OAAD,CAAVJ;AADF,KAAA,MAMO;AACLA,MAAAA,UAAU,CAAC,UAAA,SAAA,EAAS;AAAA,eAAK;AACvBE,UAAAA,aAAa,EAAEK,SAAS,CADD,YAAA;AAEvBJ,UAAAA,YAAY,EAAEI,SAAS,CAATA,YAAAA,GAFS,CAAA;AAGvBH,UAAAA,SAAS,EACPG,SAAS,CAATA,YAAAA,GAAAA,CAAAA,KAA+BR,SAAS,CAAxCQ,MAAAA,GAAAA,CAAAA,GAEIA,SAAS,CAATA,YAAAA,GAAyB;AANR,SAAL;AAApBP,OAAU,CAAVA;AAQD;AAlBqC,GAAA,EAmBrC,CAACb,OAAO,CAnBX,YAmBG,CAnBqC,CAAxC;AAqBA,MAAMqB,gBAAgB,GAAGF,WAAW,CAAC,YAAM;AAGzC,QAAInB,OAAO,CAAPA,YAAAA,IAAJ,CAAA,EAA+B;AAC7Ba,MAAAA,UAAU,CAAC;AACTE,QAAAA,aAAa,EAAEH,SAAS,CAATA,MAAAA,GADN,CAAA;AAETI,QAAAA,YAAY,EAAEJ,SAAS,CAATA,MAAAA,GAFL,CAAA;AAGTK,QAAAA,SAAS,EAAE;AAHF,OAAD,CAAVJ;AADF,KAAA,MAOO;AACLA,MAAAA,UAAU,CAAC,UAAA,SAAA,EAAS;AAAA,eAAK;AACvBI,UAAAA,SAAS,EAAEG,SAAS,CADG,YAAA;AAEvBJ,UAAAA,YAAY,EAAEI,SAAS,CAATA,YAAAA,GAFS,CAAA;AAGvBL,UAAAA,aAAa,EACXK,SAAS,CAATA,YAAAA,GAAAA,CAAAA,IAAAA,CAAAA,GACIR,SAAS,CAATA,MAAAA,GADJQ,CAAAA,GAEIA,SAAS,CAATA,YAAAA,GAAyB;AANR,SAAL;AAApBP,OAAU,CAAVA;AAQD;AAnBiC,GAAA,EAoBjC,CAACb,OAAO,CApBX,YAoBG,CApBiC,CAApC;AAuBAsB,EAAAA,SAAS,CAAC,YAAM;AACdlB,IAAAA,YAAY,IAAIA,YAAY,CAA5BA,OAA4B,CAA5BA;AACA,QAAMmB,kBAAkB,GAAGC,WAAW,CAAC,YAAM;AAC3Cf,MAAAA,UAAU,IAAIS,oBAAdT,EAAAA;AADoC,KAAA,EAAtC,gBAAsC,CAAtC;AAGA,WAAO,YAAA;AAAA,aAAMgB,aAAa,CAAnB,kBAAmB,CAAnB;AAAP,KAAA;AALO,GAAA,EAMN,CAAA,oBAAA,EAAA,OAAA,EANHH,UAMG,CANM,CAATA;AAQA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAA,KAAKrB,MAAM,CAACyB;AAA1B,GAAA,EAEInB,UAAU,GAAA,aACR,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,OAAO,EAAEc;AAAf,GAAA,EADQ,UACR,CADQ,GAAA,aAEN,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAEpB,MAAM,CAAvB,UAAA;AAAoC,IAAA,OAAO,EAAEoB;AAA7C,GAAA,EAJR,QAIQ,CAJR,EAAA,aAME,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,IAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EAAT,KAAS,CAAT;AAAuB,IAAA,SAAS,EAAKpB,MAAM,CAAX,YAAKA,GAAL,GAAKA,IAAuBI,kBAAkB,GAAA,kBAAA,GAAuBJ,MAAM,CAA3E,eAAKA;AAArC,GAAA,EACG,SAAS,CAAT,GAAA,CAAc,UAAA,IAAA,EAAA,KAAA,EAAA;AAAA,WAAA,aACb,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,MAAA,GAAG,EAAE0B,IAAI,CADX,GAAA;AAEE,MAAA,SAAS,EAAA,CAAMrB,aAAa,GAAA,aAAA,GAAnB,EAAA,IAAA,GAAA,GAA4CL,MAAM,CAAlD,IAAA,GAAA,GAAA,GAA2DF,aAAa,CAAA,OAAA,EAAA,KAAA;AAFnF,KAAA,EADa,IACb,CADa;AAPnB,GAOK,CADH,CANF,EAiBIS,WAAW,GAAA,aACT,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,OAAO,EAAEU;AAAf,GAAA,EADS,WACT,CADS,GAAA,aAEP,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAEjB,MAAM,CAAvB,WAAA;AAAqC,IAAA,OAAO,EAAEiB;AAA9C,GAAA,EApBV,QAoBU,CAnBR,CADF;AA5DK,CAAP","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\nimport styles from './styles.module.css'\n\nconst defaultCardItems = [\n  (\n    <div key=\"key1\">\n      <h2>First Item</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  ),\n  (\n    <div key=\"key2\">\n      <h2>Second Item</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  ),\n  (\n    <div key=\"key3\">\n      <h2>Third Item</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n];\n\n\nconst setCardStatus = (indexes, cardIndex) => {\n  // console.log(indexes, cardIndex);\n  if (indexes.currentIndex === cardIndex) {\n    return  styles.active;\n  } else if (indexes.nextIndex === cardIndex) {\n    return styles.next;\n  } else if (indexes.previousIndex === cardIndex) {\n    return styles.prev;\n  }\n  return styles.inactive;\n}\n\nexport const StackedCarousel = ({ style, onCardChange, containerClassName, cardClassName, leftButton, rightButton, autoRotate=true, rotationInterval=2000, children}) => {\n  const cardItems = children || defaultCardItems;\n  const [indexes, setIndexes] = useState({\n    previousIndex: cardItems.length-1,\n    currentIndex: 0,\n    nextIndex: 1\n  });\n\n  const handleCardTransition = useCallback(() => {\n    // If we've reached the end, start again from the first card,\n    // but carry previous value over\n    if (indexes.currentIndex >= cardItems.length - 1) {\n      setIndexes({\n        previousIndex: cardItems.length - 1,\n        currentIndex: 0,\n        nextIndex: 1\n      });\n    } else {\n      setIndexes(prevState => ({\n        previousIndex: prevState.currentIndex,\n        currentIndex: prevState.currentIndex + 1 ,\n        nextIndex:\n          prevState.currentIndex + 2 === cardItems.length\n            ? 0\n            : prevState.currentIndex + 2\n      }));\n    }\n  }, [indexes.currentIndex]);\n\n  const handleLeftButton = useCallback(() => {\n    // If we've reached the end, start again from the first card,\n    // but carry previous value over\n    if (indexes.currentIndex <= 0) {\n      setIndexes({\n        previousIndex: cardItems.length - 2,\n        currentIndex: cardItems.length - 1,\n        nextIndex: 0\n      });\n\n    } else {\n      setIndexes(prevState => ({\n        nextIndex: prevState.currentIndex,\n        currentIndex: prevState.currentIndex - 1,\n        previousIndex:\n          prevState.currentIndex - 1 <= 0\n            ? cardItems.length - 1\n            : prevState.currentIndex - 2\n      }));\n    }\n  }, [indexes.currentIndex]);\n\n  \n  useEffect(() => {\n    onCardChange && onCardChange(indexes);\n    const transitionInterval = setInterval(() => {\n      autoRotate && handleCardTransition();\n    }, rotationInterval);\n    return () => clearInterval(transitionInterval);\n  }, [handleCardTransition, indexes, autoRotate]);\n\n  return (\n    <div className={`${styles.container}`}>\n      {\n        leftButton ?\n          <span onClick={handleLeftButton}>{leftButton}</span>\n          : <span className={styles.leftButton} onClick={handleLeftButton}>&lsaquo;</span>\n      }\n      <ul style={{...style}} className={`${styles.cardCarousel} ${containerClassName? containerClassName : styles.carouselDefault}`}>\n        {cardItems.map((card, index) => (\n          <li\n            key={card.key}\n            className={`${ cardClassName ? cardClassName : ''} ${styles.card} ${setCardStatus(indexes, index)}`}\n          >\n            { card }\n          </li>\n        ))}\n        </ul>\n      {\n        rightButton ?\n          <span onClick={handleCardTransition}>{rightButton}</span>\n          : <span className={styles.rightButton} onClick={handleCardTransition}>&rsaquo;</span>\n      }\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}