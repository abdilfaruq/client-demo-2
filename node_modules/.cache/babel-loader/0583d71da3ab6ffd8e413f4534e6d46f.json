{"ast":null,"code":"import _regeneratorRuntime from\"D:/Coding/Learning/ReactJS/home6/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Coding/Learning/ReactJS/home6/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{REQUEST_USER_DATA_SUCCESS,REQUEST_USER_DATA_FAILED,REG_INPUT_EMAIL,REG_INPUT_FIRST_NAME,REG_INPUT_LAST_NAME,REG_INPUT_PASSWORD,REG_SUCCESS,REG_FAILED,REG_LOADING,SET_EMAIL,SET_PASSWORD,USER_LOGOUT}from'./constants';import Axios from'axios';import{store}from'../index';export var setEmail=function setEmail(text){return{type:SET_EMAIL,payload:text};};export var setPassword=function setPassword(password){return{type:SET_PASSWORD,payload:password};};export var inputRegFirstName=function inputRegFirstName(text){return{type:REG_INPUT_FIRST_NAME,payload:text};};export var inputRegLastName=function inputRegLastName(text){return{type:REG_INPUT_LAST_NAME,payload:text};};export var inputRegEmail=function inputRegEmail(email){return{type:REG_INPUT_EMAIL,payload:email};};export var inputRegPassword=function inputRegPassword(password){return{type:REG_INPUT_PASSWORD,payload:password};};export var registerUser=function registerUser(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var data,resp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios({method:'POST',data:{firstName:store.getState().inputRegisterDetails.firstName,lastName:store.getState().inputRegisterDetails.lastName,email:store.getState().inputRegisterDetails.email,password:store.getState().inputRegisterDetails.password},withCredentials:true,url:\"http://localhost:5000/users/register\"});case 2:data=_context.sent;_context.next=5;return data;case 5:resp=_context.sent;dispatch({type:REG_LOADING,payload:true});if(resp.message===\"Registration successful\"){dispatch({type:REG_SUCCESS,payload:resp.message});dispatch({type:REG_LOADING,payload:false});}else{dispatch({type:REG_FAILED,payload:resp.message});dispatch({type:REG_LOADING,payload:false});}case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var logoutUser=function logoutUser(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var logout,resp;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return localStorage.removeItem('linguo-state.requestUserData');case 2:logout=_context2.sent;_context2.next=5;return logout;case 5:resp=_context2.sent;try{dispatch({type:USER_LOGOUT,payload:resp});}catch(err){console.log(err);}case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var requestUserData=function requestUserData(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var data,resp;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return Axios({method:\"POST\",data:{email:store.getState().inputLoginDetails.email,password:store.getState().inputLoginDetails.password},withCredentials:true,url:\"http://localhost:5000/users/authenticate\"});case 2:data=_context3.sent;_context3.next=5;return data;case 5:resp=_context3.sent;if(resp.data.id){dispatch({type:REQUEST_USER_DATA_SUCCESS,payload:resp.data});}else{dispatch({type:REQUEST_USER_DATA_FAILED,payload:'Incorrect email or password'});}case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["D:/Coding/Learning/ReactJS/home6/src/redux/actions.jsx"],"names":["REQUEST_USER_DATA_SUCCESS","REQUEST_USER_DATA_FAILED","REG_INPUT_EMAIL","REG_INPUT_FIRST_NAME","REG_INPUT_LAST_NAME","REG_INPUT_PASSWORD","REG_SUCCESS","REG_FAILED","REG_LOADING","SET_EMAIL","SET_PASSWORD","USER_LOGOUT","Axios","store","setEmail","text","type","payload","setPassword","password","inputRegFirstName","inputRegLastName","inputRegEmail","email","inputRegPassword","registerUser","dispatch","method","data","firstName","getState","inputRegisterDetails","lastName","withCredentials","url","resp","message","logoutUser","localStorage","removeItem","logout","err","console","log","requestUserData","inputLoginDetails","id"],"mappings":"2SAAA,OACIA,yBADJ,CAEIC,wBAFJ,CAGIC,eAHJ,CAIIC,oBAJJ,CAKIC,mBALJ,CAMIC,kBANJ,CAOIC,WAPJ,CAQIC,UARJ,CASIC,WATJ,CAUIC,SAVJ,CAWIC,YAXJ,CAYIC,WAZJ,KAaO,aAbP,CAcA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,UAAtB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,QAAW,CAC/BC,IAAI,CAAEP,SADyB,CAE/BQ,OAAO,CAAEF,IAFsB,CAAX,EAAjB,CAKP,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,QAAe,CACtCH,IAAI,CAAEN,YADgC,CAEtCO,OAAO,CAAEE,QAF6B,CAAf,EAApB,CAKP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACL,IAAD,QAAW,CACxCC,IAAI,CAAEb,oBADkC,CAExCc,OAAO,CAAEF,IAF+B,CAAX,EAA1B,CAKP,MAAO,IAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACN,IAAD,QAAW,CACvCC,IAAI,CAAEZ,mBADiC,CAEvCa,OAAO,CAAEF,IAF8B,CAAX,EAAzB,CAKP,MAAO,IAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,QAAY,CACrCP,IAAI,CAAEd,eAD+B,CAErCe,OAAO,CAAEM,KAF4B,CAAZ,EAAtB,CAKP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACL,QAAD,QAAe,CAC3CH,IAAI,CAAEX,kBADqC,CAE3CY,OAAO,CAAEE,QAFkC,CAAf,EAAzB,CAKP,MAAO,IAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,kGAAM,iBAAOC,QAAP,sJACbd,CAAAA,KAAK,CAAC,CACnBe,MAAM,CAAE,MADW,CAEnBC,IAAI,CAAE,CACFC,SAAS,CAAEhB,KAAK,CAACiB,QAAN,GAAiBC,oBAAjB,CAAsCF,SAD/C,CAEFG,QAAQ,CAAEnB,KAAK,CAACiB,QAAN,GAAiBC,oBAAjB,CAAsCC,QAF9C,CAGFT,KAAK,CAAEV,KAAK,CAACiB,QAAN,GAAiBC,oBAAjB,CAAsCR,KAH3C,CAIFJ,QAAQ,CAAEN,KAAK,CAACiB,QAAN,GAAiBC,oBAAjB,CAAsCZ,QAJ9C,CAFa,CAQnBc,eAAe,CAAE,IARE,CASnBC,GAAG,CAAE,sCATc,CAAD,CADQ,QAC1BN,IAD0B,qCAYbA,CAAAA,IAZa,QAY1BO,IAZ0B,eAa9BT,QAAQ,CAAC,CACLV,IAAI,CAAER,WADD,CACcS,OAAO,CAAE,IADvB,CAAD,CAAR,CAGA,GAAIkB,IAAI,CAACC,OAAL,GAAiB,yBAArB,CAAgD,CAC5CV,QAAQ,CAAC,CACLV,IAAI,CAAEV,WADD,CACcW,OAAO,CAAEkB,IAAI,CAACC,OAD5B,CAAD,CAAR,CAGAV,QAAQ,CAAC,CACLV,IAAI,CAAER,WADD,CACcS,OAAO,CAAE,KADvB,CAAD,CAAR,CAGH,CAPD,IAOO,CACHS,QAAQ,CAAC,CACLV,IAAI,CAAET,UADD,CACaU,OAAO,CAAEkB,IAAI,CAACC,OAD3B,CAAD,CAAR,CAGAV,QAAQ,CAAC,CACLV,IAAI,CAAER,WADD,CACcS,OAAO,CAAE,KADvB,CAAD,CAAR,CAGH,CA9B6B,sDAAN,gEAArB,CAkCP,MAAO,IAAMoB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,mGAAM,kBAAOX,QAAP,6JACTY,CAAAA,YAAY,CAACC,UAAb,CAAwB,8BAAxB,CADS,QACxBC,MADwB,uCAEXA,CAAAA,MAFW,QAExBL,IAFwB,gBAG5B,GAAI,CACAT,QAAQ,CAAC,CACLV,IAAI,CAAEL,WADD,CACcM,OAAO,CAAEkB,IADvB,CAAD,CAAR,CAGH,CAAC,MAAOM,GAAP,CAAY,CACVC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAT2B,wDAAN,kEAAnB,CAYP,MAAO,IAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,mGAAM,kBAAOlB,QAAP,2JAChBd,CAAAA,KAAK,CAAC,CACnBe,MAAM,CAAE,MADW,CAEnBC,IAAI,CAAE,CACFL,KAAK,CAAEV,KAAK,CAACiB,QAAN,GAAiBe,iBAAjB,CAAmCtB,KADxC,CAEFJ,QAAQ,CAAEN,KAAK,CAACiB,QAAN,GAAiBe,iBAAjB,CAAmC1B,QAF3C,CAFa,CAMnBc,eAAe,CAAE,IANE,CAOnBC,GAAG,CAAE,0CAPc,CAAD,CADW,QAC7BN,IAD6B,uCAUhBA,CAAAA,IAVgB,QAU7BO,IAV6B,gBAWjC,GAAIA,IAAI,CAACP,IAAL,CAAUkB,EAAd,CAAkB,CACdpB,QAAQ,CAAC,CACLV,IAAI,CAAEhB,yBADD,CAC4BiB,OAAO,CAAEkB,IAAI,CAACP,IAD1C,CAAD,CAAR,CAGH,CAJD,IAIO,CACHF,QAAQ,CAAC,CACLV,IAAI,CAAEf,wBADD,CAC2BgB,OAAO,CAAE,6BADpC,CAAD,CAAR,CAGH,CAnBgC,wDAAN,kEAAxB","sourcesContent":["import {\r\n    REQUEST_USER_DATA_SUCCESS,\r\n    REQUEST_USER_DATA_FAILED,\r\n    REG_INPUT_EMAIL,\r\n    REG_INPUT_FIRST_NAME,\r\n    REG_INPUT_LAST_NAME,\r\n    REG_INPUT_PASSWORD,\r\n    REG_SUCCESS,\r\n    REG_FAILED,\r\n    REG_LOADING,\r\n    SET_EMAIL,\r\n    SET_PASSWORD,\r\n    USER_LOGOUT\r\n} from './constants';\r\nimport Axios from 'axios';\r\nimport { store } from '../index';\r\n\r\nexport const setEmail = (text) => ({\r\n    type: SET_EMAIL,\r\n    payload: text\r\n})\r\n\r\nexport const setPassword = (password) => ({\r\n    type: SET_PASSWORD,\r\n    payload: password\r\n})\r\n\r\nexport const inputRegFirstName = (text) => ({\r\n    type: REG_INPUT_FIRST_NAME,\r\n    payload: text\r\n})\r\n\r\nexport const inputRegLastName = (text) => ({\r\n    type: REG_INPUT_LAST_NAME,\r\n    payload: text\r\n})\r\n\r\nexport const inputRegEmail = (email) => ({\r\n    type: REG_INPUT_EMAIL,\r\n    payload: email\r\n})\r\n\r\nexport const inputRegPassword = (password) => ({\r\n    type: REG_INPUT_PASSWORD,\r\n    payload: password\r\n})\r\n\r\nexport const registerUser = () => async (dispatch) => {\r\n    let data = await Axios({\r\n        method: 'POST',\r\n        data: {\r\n            firstName: store.getState().inputRegisterDetails.firstName,\r\n            lastName: store.getState().inputRegisterDetails.lastName,\r\n            email: store.getState().inputRegisterDetails.email,\r\n            password: store.getState().inputRegisterDetails.password\r\n        },\r\n        withCredentials: true,\r\n        url: \"http://localhost:5000/users/register\"\r\n        })\r\n    let resp = await data;\r\n    dispatch({\r\n        type: REG_LOADING, payload: true\r\n    })\r\n    if (resp.message === \"Registration successful\") {\r\n        dispatch({\r\n            type: REG_SUCCESS, payload: resp.message\r\n        });\r\n        dispatch({\r\n            type: REG_LOADING, payload: false \r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: REG_FAILED, payload: resp.message\r\n        });\r\n        dispatch({\r\n            type: REG_LOADING, payload: false\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n    let logout = await localStorage.removeItem('linguo-state.requestUserData');\r\n    let resp = await logout;\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGOUT, payload: resp\r\n        })\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const requestUserData = () => async (dispatch) => {\r\n    let data = await Axios({\r\n        method: \"POST\",\r\n        data: {\r\n            email: store.getState().inputLoginDetails.email,\r\n            password: store.getState().inputLoginDetails.password,\r\n        },\r\n        withCredentials: true,\r\n        url: \"http://localhost:5000/users/authenticate\",\r\n        });\r\n    let resp = await data;\r\n    if (resp.data.id) {\r\n        dispatch({\r\n            type: REQUEST_USER_DATA_SUCCESS, payload: resp.data\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: REQUEST_USER_DATA_FAILED, payload: 'Incorrect email or password'\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}