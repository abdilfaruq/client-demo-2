import React, { useState, useCallback, useEffect } from 'react';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var styles = {"container":"_1Lxpd","cardCarousel":"_3tZKZ","carouselDefault":"_215Bn","leftButton":"_2ocTZ","rightButton":"_2YVEG","card":"_xsi02","active":"_3sodH","next":"_1uQwZ","prev":"_KqFRp","inactive":"_3hvs3"};

var defaultCardItems = [/*#__PURE__*/React.createElement("div", {
  key: "key1"
}, /*#__PURE__*/React.createElement("h2", null, "First Item"), /*#__PURE__*/React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit.")), /*#__PURE__*/React.createElement("div", {
  key: "key2"
}, /*#__PURE__*/React.createElement("h2", null, "Second Item"), /*#__PURE__*/React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit.")), /*#__PURE__*/React.createElement("div", {
  key: "key3"
}, /*#__PURE__*/React.createElement("h2", null, "Third Item"), /*#__PURE__*/React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit."))];

var setCardStatus = function setCardStatus(indexes, cardIndex) {
  if (indexes.currentIndex === cardIndex) {
    return styles.active;
  } else if (indexes.nextIndex === cardIndex) {
    return styles.next;
  } else if (indexes.previousIndex === cardIndex) {
    return styles.prev;
  }

  return styles.inactive;
};

var StackedCarousel = function StackedCarousel(_ref) {
  var style = _ref.style,
      onCardChange = _ref.onCardChange,
      containerClassName = _ref.containerClassName,
      cardClassName = _ref.cardClassName,
      leftButton = _ref.leftButton,
      rightButton = _ref.rightButton,
      _ref$autoRotate = _ref.autoRotate,
      autoRotate = _ref$autoRotate === void 0 ? true : _ref$autoRotate,
      _ref$rotationInterval = _ref.rotationInterval,
      rotationInterval = _ref$rotationInterval === void 0 ? 2000 : _ref$rotationInterval,
      children = _ref.children;
  var cardItems = children || defaultCardItems;

  var _useState = useState({
    previousIndex: cardItems.length - 1,
    currentIndex: 0,
    nextIndex: 1
  }),
      indexes = _useState[0],
      setIndexes = _useState[1];

  var handleCardTransition = useCallback(function () {
    if (indexes.currentIndex >= cardItems.length - 1) {
      setIndexes({
        previousIndex: cardItems.length - 1,
        currentIndex: 0,
        nextIndex: 1
      });
    } else {
      setIndexes(function (prevState) {
        return {
          previousIndex: prevState.currentIndex,
          currentIndex: prevState.currentIndex + 1,
          nextIndex: prevState.currentIndex + 2 === cardItems.length ? 0 : prevState.currentIndex + 2
        };
      });
    }
  }, [indexes.currentIndex]);
  var handleLeftButton = useCallback(function () {
    if (indexes.currentIndex <= 0) {
      setIndexes({
        previousIndex: cardItems.length - 2,
        currentIndex: cardItems.length - 1,
        nextIndex: 0
      });
    } else {
      setIndexes(function (prevState) {
        return {
          nextIndex: prevState.currentIndex,
          currentIndex: prevState.currentIndex - 1,
          previousIndex: prevState.currentIndex - 1 <= 0 ? cardItems.length - 1 : prevState.currentIndex - 2
        };
      });
    }
  }, [indexes.currentIndex]);
  useEffect(function () {
    onCardChange && onCardChange(indexes);
    var transitionInterval = setInterval(function () {
      autoRotate && handleCardTransition();
    }, rotationInterval);
    return function () {
      return clearInterval(transitionInterval);
    };
  }, [handleCardTransition, indexes, autoRotate]);
  return /*#__PURE__*/React.createElement("div", {
    className: "" + styles.container
  }, leftButton ? /*#__PURE__*/React.createElement("span", {
    onClick: handleLeftButton
  }, leftButton) : /*#__PURE__*/React.createElement("span", {
    className: styles.leftButton,
    onClick: handleLeftButton
  }, "\u2039"), /*#__PURE__*/React.createElement("ul", {
    style: _extends({}, style),
    className: styles.cardCarousel + " " + (containerClassName ? containerClassName : styles.carouselDefault)
  }, cardItems.map(function (card, index) {
    return /*#__PURE__*/React.createElement("li", {
      key: card.key,
      className: (cardClassName ? cardClassName : '') + " " + styles.card + " " + setCardStatus(indexes, index)
    }, card);
  })), rightButton ? /*#__PURE__*/React.createElement("span", {
    onClick: handleCardTransition
  }, rightButton) : /*#__PURE__*/React.createElement("span", {
    className: styles.rightButton,
    onClick: handleCardTransition
  }, "\u203A"));
};

export { StackedCarousel };
//# sourceMappingURL=index.modern.js.map
